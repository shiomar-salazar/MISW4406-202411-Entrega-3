---------------------------------------------
:CONFIGURACIÓN KUBERENTES PROPIEDADES ALPES:
---------------------------------------------

-> Loguearse con la cuenta de GCP:
	gcloud auth login

-> Autenticarse en Artifact Registry:
	gcloud auth configure-docker us-central1-docker.pkg.dev

-> Artifact Registry:
	Nombre: misw4406-propiedadesalpes

-> Construir imagenes:

	-> Imagen de Usuarios:
		docker build -t us-central1-docker.pkg.dev/proyecto1-experimentos/misw4406-propiedadesalpes/propiedadesalpes:1.0 .
		docker build -t us-central1-docker.pkg.dev/proyecto1-experimentos/misw4406-propiedadesalpes/pulsar:1.0 .
		docker image tag apachepulsar/pulsar:3.2.0 us-central1-docker.pkg.dev/proyecto1-experimentos/misw4406-propiedadesalpes/pulsar:1.0

-> Publicar imagenes en Artifact Registry:
	
	-> Publicar de Usuarios:	
		docker push us-central1-docker.pkg.dev/proyecto1-experimentos/misw4406-propiedadesalpes/propiedadesalpes:1.0
		docker push us-central1-docker.pkg.dev/proyecto1-experimentos/misw4406-propiedadesalpes/pulsar:1.0
	
-> Crear red virtual:
	gcloud compute networks create vpn-proyecto1-experimentos --project=proyecto1-experimentos --subnet-mode=custom --mtu=1460 --bgp-routing-mode=regional

-> Crear subred para los pods:
	gcloud compute networks subnets create red-proyecto1-experimentos --range=192.168.32.0/19 --network=vpn-proyecto1-experimentos --region=us-central1 --project=proyecto1-experimentos

-> Crear Kubernetes:
	Nombre Kubernetes: misw4406-propiedadesalpes
	Red: vpn-proyecto1-experimentos
	Subred del nodo: red-proyecto1-experimentos
	Rango de direcciones del pod: 192.168.64.0/21
	Rango de direcciones del servicio: 192.168.72.0/21

-> Conectarse al cluster Kuberneters:
	gcloud container clusters get-credentials misw4406-propiedadesalpes --region us-central1 --project proyecto1-experimentos

-> Crear sub red para la base de datos:
	gcloud compute addresses create red-dbs-proyecto1-experimentos --global --purpose=VPC_PEERING --addresses=192.168.0.0 --prefix-length=24 --network=vpn-proyecto1-experimentos --project=proyecto1-experimentos

-> Otorgar accesos a la red virtual:
	gcloud services vpc-peerings connect --service=servicenetworking.googleapis.com --ranges=red-dbs-proyecto1-experimentos --network=vpn-proyecto1-experimentos --project=proyecto1-experimentos
	
-> Agregar regla del firewall :
	gcloud compute firewall-rules create allow-db-ingress --direction=INGRESS --priority=1000 --network=vpn-proyecto1-experimentos --action=ALLOW --rules=tcp:5432 --source-ranges=192.168.1.0/24 --target-tags=basesdedatos --project=proyecto1-experimentos

-> Crear base de datos:
	-> Instancia:
		Nombre: postgres
		Contraseña: postgres
		Versión: PostgreSQL 15
		Región: us-central1
		Disponibilidad zonal: Única
	
	-> Maquina y Almacenamiento:
		Tipo de máquina: De núcleo compartido, 1 core y 1.7 GB de RAM
		Almacenamiento 10 GB de HDD
		No habilitar los aumentos automáticos de almacenamiento.
	
	-> Conexiones:
		Asignación de IP de la instancia: privada
		Red: vpn-proyecto1-experimentos
		Rango de IP asignado: red-dbs-misw-proyecto1-experimentos
		
	-> Etiquetas:
		basesdedatos

-> Conectarse a Kuberneters en GCP:
	gcloud container clusters get-credentials proyectos1-experimentos --zone us-central1-c --project proyecto1-experimentos

-> Borrar todo en kubernetes lo referente a pods, services y deployments:	
	kubectl delete all --all -n default

-> Aplicar Secrets:
	kubectl apply -f secrets-propiedadesalpes.yml

-> Aplicar deployment servicios:
	kubectl apply -f k8s-propiedadesalpes.yaml
	
-> Aplicar ingress con todos los servicios:
	kubectl apply -f k8s-ingress-propiedadesalpes.yaml

-> Borrar ingress:
	kubectl delete ingress k8s-ingress-propiedadesalpes.yaml


----------------------------------------------------------------------------------------
ISNTALACIÓN COMPUTE ENGINE
----------------------------------------------------------------------------------------
Instancia VM

Nombre: instancia-vm-propiedadesalpes
Regiión: us-central1 (Iowa)
Zona: us-central1-a

Comandos:

Actualizar el sistema:
	-> sudo apt-get update

Instalar docker-compose plugin:
	-> sudo apt-get install docker-compose

Validar version de docker-compose:
	-> docker-compose version
	
Validar version de git:
	-> git --version	

Clonar proyecto git:
	-> git clone https://github.com/shiomar-salazar/MISW4406-202411-Entrega-3-4-5.git

Acceder a la carpeta del proyecto:
	-> cd MISW4406-202411-Entrega-3-4-5

Lanzar docker-compose del proyecto:
	-> sudo docker-compose up	


Regla de firewall:

Nombre: external-full-access
Descripción: Regla de firewall para permitir el acceso  externo completo a todos los usuarios



Nombre: rf-servicios-propiedades-alpes	
Descripción: Regla de firewall para exponer los servicios de Propiedades los Alpes

Rangos de IPv4 de origen: 0.0.0.0/0
